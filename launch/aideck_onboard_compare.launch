<launch>

  <arg name="rate" default="30"/>
  <arg name="eta" default="1.0"/>
  <arg name="max_angular_speed" default="1.0"/>
  <arg name="max_speed" default="1.0"/>
  <arg name="max_vertical_speed" default="0.5"/>
  <arg name="relative_altitude" default="0"/>
  <arg name="target_range" default="1.3"/>
  <arg name="target_altitude" default="1.4"/>

  <node pkg="crazyflie_driver" type="crazyflie_server" name="crazyflie_server" output="screen"/>

  <node name='monitor' pkg='drone_arena' type='cf_frontnet_monitor.py' output="screen" ns="cf"/>

  <node clear_params="true" name='supervisor' pkg='drone_arena' type='cf_supervisor.py' output="screen" ns="cf">
    <param name='name' value='cf'/>
    <rosparam subst_value="true" param="">
      radio:
        id: 0
        channel: 100
        bandwidth : 2M
      params: []
      crazyflies:
        -
          id: 6
          front_net: true
          front_net_frame: base_stabilized
          front_net_rate: $(arg rate)
          topics:
            frontnet_state:
              period: 500
              variables: [frontnet.control_active]
            <!-- frontnet_output:
              period: 100
              variables: [frontnet.x, frontnet.lastUpdate] -->
            <!-- control_onboard:
              period: 3000
              variables: [frontnet.c_x, frontnet.c_y, frontnet.c_phi]
            head_odom_onboard:
              period: 30
              variables: [frontnet.f_x, frontnet.f_y,  frontnet.f_phi, frontnet.f_vx, frontnet.f_vy,  frontnet.f_vphi] -->
          params:
            kalman/thetapix: 3.75
            stabilizer/controller: 1
            stabilizer/estimator: 2
            aideck_HIMAX/fps: $(arg rate)
            aideck_inference/active: 1
            frontnet/enable_control: 0
            frontnet/max_speed: $(arg max_speed)
            frontnet/max_ang_speed: $(arg max_angular_speed)
            frontnet/max_vert_speed: $(arg max_vertical_speed)
            frontnet/eta: $(arg eta)
            frontnet/rel_altitude: $(arg relative_altitude)
            frontnet/distance: $(arg target_range)
            frontnet/altitude: $(arg target_altitude)
    </rosparam>
  </node>

  <node name="prediction2odom" pkg="drone_arena" type="front_net2odom_kalman.py" output="screen" ns="cf">
    <remap from="prediction" to="output"/>
    <remap from="filtered_odom" to="head_odom"/>
  </node>

  <node name="check_control" pkg="drone_arena" type="front_net_check_control.py" output="screen" ns="cf">
  </node>

  <node pkg="drone_arena" type="cf_controller.py" name="fence_controller" output="screen" ns="cf">
    <!-- <param name="mocap_pose" value="/optitrack/cf" if="$(arg use_mocap_for_state_estimation)"/> -->
    <param name="use_mocap_z" value="False"/>
    <param name="frame_id" value="cf/odom"/>
    <remap from="cf_odom" to="odom"/>
    <param name="enable_fence" value="True"/>
    <param name="publish_target" value="False"/>
    <param name="publish_body_vel" value="True"/>
    <param name="publish_cmd" value="False"/>
    <param name="teleop_mode" value="1"/>
    <param name="max_speed" value="$(arg max_speed)"/>
    <param name="max_vertical_speed" value="$(arg max_vertical_speed)"/>
    <param name="max_angular_speed" value="$(arg max_angular_speed)"/>
    <param name="tau" value="0.5"/>
    <param name="eta" value="$(arg eta)"/>
    <param name="delay" value="0"/>
    <param name="joy_set_teleop_mode" value="true"/>
    <param name="max_safe_angle" value="0.75"/>
    <param name="takeoff_altitude" value="0.3"/>
    <param name="land_at_altitude" value="false"/>
    <param name="track_altitude" value="$(arg target_altitude)"/>
    <param name="track_altitude_as_relative" value="$(arg relative_altitude)"/>
    <param name="track_relative_altitude" value="0.0"/>
    <param name="track_distance" value="$(arg target_range)"/>
    <rosparam param="pos_bounds">
      - [-100, 100]
      - [-100, 100]
      - [0.25, 2]
    </rosparam>
  </node>

  <include file="$(find drone_arena)/launch/joy_teleop.launch">
    <arg name="teleop_config" default="$(find drone_arena)/config/log710-demo-pulp-onboard.yaml"/>
    <arg name="namespace" value="cf"/>
    <arg name="joy_dev" value="/dev/input/js1"/>
  </include>

  <!-- <node pkg="drone_arena" type="cf_led.py" name="blinkstick" output="screen" ns="cf">
    <param name="leds" value="8"/>
    <param name="max_intensity" value="100"/>
    <param name="ns" value="cf"/>
  </node> -->

</launch>
